@using EventManagerWebRazorPage.ViewModels
@model EventWithDetailedEventItemsViewModel

@{
    ViewData["Title"] = "Details";
    bool registrationAvailable = (ViewData["RegistrationAvailable"] != null && ViewData["RegistrationAvailable"]!.ToString() == "1") ? true : false;
    Layout = "~/Views/Shared/_Layout.cshtml";
    string path = ViewBag.ImagePath;
    string? editTimerExpiredAlertMessage = (User.IsInRole("Organizer") && TempData["EditTimeExpired"] != null && !String.IsNullOrEmpty(TempData["EditTimeExpired"]!.ToString())) ? TempData["EditTimeExpired"]!.ToString() : string.Empty;
    string? userRegistrationItemId = (ViewData["UserRegistrationItemId"] != null && !String.IsNullOrEmpty(ViewData["UserRegistrationItemId"]!.ToString())) ? ViewData["UserRegistrationItemId"]!.ToString() : string.Empty;
    string? registerToEventMessage = (TempData["RegisterToEventMessage"] != null && !String.IsNullOrEmpty(TempData["RegisterToEventMessage"]!.ToString())) ? TempData["RegisterToEventMessage"]!.ToString() : string.Empty;
}

<h1 class="align-self-center">@Html.DisplayFor(model => model.EventDetail.Title)</h1>
<h5 class="text-muted align-self-center">@Html.DisplayFor(model => model.CreatedBy)</h5>

<div>
    <hr />
    <div class="row">
        <div class="col-6">
            <div class="row">
                <h5>@Html.DisplayNameFor(model => model.EventDetail.EventTime)</h5>
            </div>
            <div class="row">
                <h6>@Html.DisplayFor(model => model.EventDetail.EventTime)</h6>
            </div>
            <div class="row">
                <h5>Registration Timeline:</h5>
            </div>
            <div class="row">
                <h6>@Html.DisplayFor(model => model.EventDetail.RegistrationStartDate) - @Html.DisplayFor(model => model.EventDetail.RegistrationEndDate)</h6>
            </div>
            <div class="row">
                <h4>@Html.DisplayFor(model => model.EventDetail.Message)</h4>
            </div>
        </div>
        <div class="col-6">
            <div>
                <img id="previewImage" src="@Url.Content(path + Model.EventDetail.MainImage)" style="max-height:500px;max-width:500px" />
            </div>
        </div>
    </div>
    <br/>
    <div class="row">
        <form asp-action="RegisterToEvent" enctype="multipart/form-data">
            @Html.HiddenFor(model => model.EventDetail.EventId)
            <div class="row">
                @foreach (var item in Model.EventItemViewModels)
                {
                    <div class="form-group col-3 mb-3">
                        <div class="card h-100">
                            <img src="@path@item.EventItem.Image" class="card-img-top align-self-center" style="height:200px;width:300px" />
                            <div class="card-body d-flex flex-column">
                                <div class="row d-flex align-self-center">
                                    @if (registrationAvailable || !String.IsNullOrEmpty(userRegistrationItemId))
                                    {
                                        <p class="fw-bold">@Html.RadioButton("ItemButton", item.EventItem.ItemId) @Html.DisplayFor(modelItem => item.EventItem.ItemName)</p>
                                    }
                                    else
                                    {
                                        <p class="fw-bold">@Html.DisplayFor(modelItem => item.EventItem.ItemName)</p>
                                    }
                                </div>
                                <div class="row pb-3">
                                    <p class="card-text">@Html.DisplayFor(modelItem => item.EventItem.Description)</p>
                                </div>
                                <div class="mt-auto">
                                    <small class="text-muted d-flex justify-content-end">@Html.DisplayFor(modelItem => item.ItemsRegistered) people ordered this item</small>
                                    <small class="text-muted d-flex justify-content-end">Total @Html.DisplayFor(modelItem => item.EventItem.Amount) slot(s)</small>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            @if (registrationAvailable && String.IsNullOrEmpty(userRegistrationItemId))
            {
                <div>
                    <button id="registerToEventBtn" class="btn btn-primary">Count Me In!</button>
                </div>
            }
        </form>
    </div>
</div>
<div>
    @if(User.IsInRole("Organizer"))
    {
        <a asp-action="Edit" asp-route-id="@Model.EventDetail.EventId">Edit</a> <span> | </span>
        <a asp-action="Delete" asp-route-id="@Model.EventDetail.EventId">Delete</a> <span> | </span>
        <a asp-action="ParticipationList" asp-route-id="@Model.EventDetail.EventId">Participation List</a> <span> | </span>
    }
    <a asp-action="Index">Back to List</a>
</div>
@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $("document").ready(function () {
            addAlert("Timer Expired", '@editTimerExpiredAlertMessage');
            addAlert("Registration Result", '@registerToEventMessage');
            var userRegistrationItemId = '@userRegistrationItemId';
            if (userRegistrationItemId != "") 
            {
                $('input[name=ItemButton]').attr("disabled", true);
                $('input[value=' + userRegistrationItemId + ']').attr("checked", true);
            }
            function addAlert(title, message) { 
                if(message.length > 0)
                    AddModal(title, message);
            }
        });
    </script>
    <script src="~/js/AlertModal.js"></script>
}